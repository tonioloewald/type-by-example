function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}var t={};e(t,"isAsync",(()=>a)),e(t,"describe",(()=>c)),e(t,"isInstanceOf",(()=>f)),e(t,"specificTypeMatch",(()=>l)),e(t,"describeType",(()=>m)),e(t,"typeJSON",(()=>d)),e(t,"typeJS",(()=>g)),e(t,"matchType",(()=>b)),e(t,"exampleAtPath",(()=>$)),e(t,"TypeError",(()=>j)),e(t,"assignReadOnly",(()=>A)),e(t,"matchParamTypes",(()=>S)),e(t,"typeSafe",(()=>v));const r=e=>{try{return JSON.stringify(e)}catch(e){return"{has circular references}"}},n=(...e)=>new Error(e.map(r).join(" ")),s=async()=>{},a=e=>e.constructor===s.constructor,c=e=>null===e?"null":Array.isArray(e)?"array":"number"==typeof e&&isNaN(e)?"NaN":"string"==typeof e&&e.startsWith("#")?e:e instanceof Promise?"promise":"function"==typeof e?e.constructor===(async()=>{}).constructor?"async":"function":"object"==typeof e&&"Object"!==e.constructor.name?e.constructor.name:typeof e,o=e=>"-∞"===e?-1/0:"∞"===e[0]?1/0:parseFloat(e),i=(e,t)=>{let r,n;if(void 0===e)return!0;try{[,r,n]=e.match(/^([[(]-?[\d.\u221E]+)?,?(-?[\d.\u221E]+[\])])?$/)}catch(t){throw new Error(`bad range ${e}`)}if(void 0!==r&&""!==r){const e=o(r.substring(1));if("("===r[0]){if(t<=e)return!1}else if(t<e)return!1}if(void 0!==n&&""!==n){const e=o(n);if(n.endsWith(")")){if(t>=e)return!1}else if(t>e)return!1}return!0},u={},f=(e,t)=>{if("function"==typeof t)return e instanceof Function;{let r=Object.getPrototypeOf(e);for(;void 0!==r.constructor&&r.constructor!==Object;){if(r.constructor.name===t)return!0;r=Object.getPrototypeOf(r)}return!1}},l=(e,t)=>{const[,r,s,,o]=e.match(/^#([?]?)([^\s]+)(\s(.*))?$/)||[];if(""!==r&&null==t)return!0;const y=c(t);switch(s){case"forbidden":return!1;case"any":return null!=t;case"native":return"function"==typeof t&&"function () { [native code] }"===t.toString()&&(null==e||(a(t)?e.match(/^async\b/):e.match(/^function\b/)));case"function":return"function"===y;case"number":return"number"===y&&i(o,t);case"int":return"number"===y&&t===Math.floor(t)&&i(o,t);case"union":return void 0!==o.split("||").find((e=>l(`#${e}`,t)));case"enum":try{return o.split("|").map(JSON.parse).includes(t)}catch(e){throw new Error(`bad enum specification (${o}), expect JSON strings`)}case"void":return"undefined"===y||"null"===y;case"nothing":return"undefined"===y;case"string":return"string"===y;case"regexp":return"string"===y&&((e,t)=>(void 0!==u[e]?u[e]:u[e]=new RegExp(e)).test(t))(o,t);case"array":return Array.isArray(t);case"instance":return f(t,o);case"promise":return t instanceof Promise;case"object":return null!==t&&"object"==typeof t&&!Array.isArray(t);default:if(y!==s)throw n("got",t,`expected "${e}", "${y}" does not match "${s}"`);return!0}},y=/^((async\s+)?function)?\s*\((.*?)\)\s*(=>)?\s*\{/,p=/^((\.\.\.\w+)|(\w+)|\((.*?)\))\s*=>\s*[^\s{]/,h=/\w+\s*=>\s*[^\s{]|\breturn\b/,m=e=>{const t=c(e);switch(t){case"array":return e.map(m);case"object":if(e.constructor===Object){const t={};return Object.keys(e).forEach((r=>{t[r]=m(e[r])})),t}return"#instance x.constructor.name";case"function":case"async":{if(void 0!==e.protoype)return"#class x.name";const r=e.toString();if(r.endsWith("() { [native code] }"))return`#native ${t}`;const n=r.match(y),s=r.match(p),a=null!=r.match(h)||r.match(p);return`${t} ( ${(n&&n[3]||s&&(s[2]||s[3]||s[4])||"").trim().split(",").map((e=>{const[t]=e.split("=");return`${t} #any`})).join(", ")} ) => ${null!=a?"#any":"#nothing"}`}default:return`#${t}`}},d=e=>JSON.stringify(m(e)),g=e=>d(e).replace(/"(\w+)":/g,"$1:");const b=(e,t,r=[],n="")=>{const s=c(e),a=c(t);if(s.startsWith("#")?l(s,t):s===a)if("array"===s){const s=t.length>0&&function*(e){let t=0;const r=Math.ceil(e.length/101);for(;t<e.length;)t<5||t>e.length-5?(yield{sample:e[t],i:t},t++):(yield{sample:e[t],i:t},t=Math.min(t+r,e.length-4))}(t);if(1===e.length&&!1!==s)for(const{sample:t,i:a}of s)b(e[0],t,r,`${n}[${a}]`);else if(e.length>1&&!1!==s)for(const{sample:t,i:a}of s){let s=!1;for(const r of e)if(0===b(r,t,[],"").length){s=!0;break}s||r.push(`${n}[${a}] had no matching type`)}}else"object"===s&&w(e,t,r,n);else r.push(`${""!==n?n+" ":""}was ${o=t,"string"==typeof o?`"${o}"`:"object"==typeof o?c(o):o}, expected ${s}`);var o;return r},$=(e,t)=>{const r=Array.isArray(t)?[...t]:t.replace(/\[[^\]]*\]/g,".*").split(".");if(null==e||0===r.length)return e;{const t=r.shift();return"*"===t?Array.isArray(e)?1===e.length?$(e[0],r):$(Object.assign({},...e),r):void 0:$(e[t],r)}},O=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,w=(e,t,r=[],s="")=>{const a=new Set;for(const c of Object.keys(e))if(c.startsWith("#")){let o=O;try{"#"!==c&&(o=new RegExp(`^${c.substring(1)}$`))}catch(e){const t=`illegal regular expression in example key '${c}'`;throw r.push(t),n(t)}const i=Object.keys(t).filter((e=>o.test(e)));for(const n of i)a.has(n)||(b(e[c],t[n],r,`${s}./^${c.substring(1)}$/:${n}`),a.add(n))}else if(c.endsWith("?")){const n=c.slice(0,c.length-1);Object.hasOwnProperty.call(t,n)&&(a.has(n)||(b(e[c],t[n],r,s+"."+n),a.add(n)))}else a.has(c)||(b(e[c],t[c],r,s+"."+c),a.add(c));return r};class j{functionName="anonymous";isParamFailure=!1;errors=[];constructor(e){Object.assign(this,e)}toString(){const{functionName:e,isParamFailure:t,errors:r}=this;return`${e}() failed, bad ${t?"parameter":"return"}: ${JSON.stringify(r)}`}}const A=(e,t)=>{t={...t};for(const r of Object.keys(t)){const n=t[r];Object.defineProperty(e,r,{enumerable:!0,get:()=>n,set(e){throw new Error(`${r} is read-only`)}})}return e},S=(e,t)=>{for(let e=0;e<t.length;e++)if(t[e]instanceof j)return t[e];const[r,n]=e.map(((e,r)=>b(e,t[r])));return[...r,...n]},v=(e,t=[],r,n="anonymous")=>{if(S(["#function","#?array","#?any","#?string"],[e,t,r,n])instanceof j)throw new Error("typeSafe was passed bad parameters");""!==e.name&&(n=e.name);let s=0;return A((function(...a){s+=1;const c=S(t,a);if(c instanceof j)return c;if(0===c.length){const t=e(...a),s=b(r,t);return 0===s.length?t:new j({functionName:n,isParamFailure:!1,expected:r,found:t,errors:s})}return new j({functionName:n,isParamFailure:!0,expected:t,found:a,errors:c})}),{paramTypes:t,resultType:r,getCallCount:()=>s})};export{a as isAsync,c as describe,f as isInstanceOf,l as specificTypeMatch,m as describeType,d as typeJSON,g as typeJS,b as matchType,$ as exampleAtPath,j as TypeError,A as assignReadOnly,S as matchParamTypes,v as typeSafe};
//# sourceMappingURL=index.js.map
